name: Main
on:
  push:
    branches:
      - main

jobs:
  publish_and_test_app:
    name: Build and test sample app
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name : Checkout Repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layer
        uses: actions/cache@v2
        with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          role-duration-seconds: 1200
          aws-region: us-east-1
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          context: sample-apps
          tags: |
            public.ecr.aws/aws-otel-test/js-node:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Run test containers
        run: docker-compose up --abort-on-container-exit
        working-directory: .github/collector
        env:
          INSTANCE_ID: ${{ github.run_id }}-${{ github.run_number }}
          LISTEN_ADDRESS: 0.0.0.0:8080
          APP_IMAGE: public.ecr.aws/aws-otel-test/js-node:${{ github.sha }}
          VALIDATOR_COMMAND: -c js-otel-trace-metric-validation.yml --endpoint http://app:8080 --metric-namespace aws-otel-integ-test -t ${{ github.run_id }}-${{ github.run_number }}
